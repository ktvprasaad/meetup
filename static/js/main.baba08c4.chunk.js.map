{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showHideFlag","detailsClicked","setState","event","this","props","className","local_date","local_time","name","group","localized_location","onClick","Component","EventList","events","map","key","id","mockEvents","created","duration","date_in_series_pattern","status","time","updated","utc_offset","waitlist_count","yes_rsvp_count","join_mode","lat","lon","urlname","who","country","region","timezone","link","description","visibility","member_pay_fee","how_to_find_us","fee","accepts","amount","currency","label","required","rsvp_limit","getOrRenewAccessToken","type","a","async","url","axios","get","tokenInfo","localStorage","setItem","data","access_token","refresh_token","Date","now","getAccessToken","accessToken","getItem","searchParams","URLSearchParams","window","location","search","code","href","lastSavedTime","refreshToken","getSuggestions","query","startsWith","city","localized_country_name","name_string","zip","token","result","getEvents","page","CitySearch","suggestions","handleInputChanged","value","target","then","handleItemClicked","updateEvents","onChange","placeholder","item","NumberOfEvents","displayCount","alert","console","log","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.baba08c4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Event extends Component {\r\n    state = {\r\n        showHideFlag: false,\r\n    } \r\n\r\n    detailsClicked = () => {\r\n        if (this.state.showHideFlag === false ) {\r\n            this.setState({ \r\n                showHideFlag: true,\r\n             });\r\n        } else {\r\n            this.setState({ \r\n                showHideFlag: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const event = this.props.event;\r\n        return (\r\n            <div className=\"Event\">\r\n                <div className=\"less\">\r\n                    <p className=\"date\">{event.local_date}</p>\r\n                    <p className=\"time\">{event.local_time}</p>\r\n                    <p className=\"name\">{event.name}</p>\r\n                </div>\r\n                {this.state.showHideFlag && \r\n                    <div className=\"more\">\r\n                        <p className=\"groupName\">{event.group.name}</p>\r\n                        <p className=\"location\">{event.group.localized_location}</p>\r\n                    </div>\r\n                }\r\n                <button className=\"details\" onClick={() => this.detailsClicked()}>Details</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {this.props.events.map(event => \r\n                <li key={event.id}>\r\n                    <Event event={event} />\r\n                </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","const mockEvents = {\r\n    city: {\r\n      id: 1007700,\r\n      city: 'München',\r\n      lat: 48.14,\r\n      lon: 11.58,\r\n      state: '',\r\n      country: 'de',\r\n      zip: 'meetup3',\r\n      member_count: 1257\r\n    },\r\n    events: [\r\n      {\r\n        created: 1580186017000,\r\n        duration: 3600000,\r\n        id: '268259064',\r\n        name: 'The Purpose of Life in Buddhism',\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1580540400000,\r\n        local_date: '2020-02-01',\r\n        local_time: '08:00',\r\n        updated: 1580186017000,\r\n        utc_offset: 3600000,\r\n        waitlist_count: 0,\r\n        yes_rsvp_count: 3,\r\n        group: {\r\n          created: 1449538782000,\r\n          name: 'München Meanings of Life in Buddhism Meetup',\r\n          id: 19192295,\r\n          join_mode: 'open',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'Munchen-Meanings-of-Life-in-Buddhism-Meetup',\r\n          who: 'Members',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/Munchen-Meanings-of-Life-in-Buddhism-Meetup/events/268259064/',\r\n        description: 'Why were we born? Why are we living? What is the purpose of our life?',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      },\r\n      {\r\n        created: 1579522911000,\r\n        duration: 10800000,\r\n        id: '268057247',\r\n        name: 'Drink&Click™ München, Februar, Froschperspektive',\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1581253200000,\r\n        local_date: '2020-02-09',\r\n        local_time: '14:00',\r\n        updated: 1579522911000,\r\n        utc_offset: 3600000,\r\n        waitlist_count: 0,\r\n        yes_rsvp_count: 3,\r\n        group: {\r\n          created: 1540109682000,\r\n          name: 'München Drink&Click™',\r\n          id: 30362257,\r\n          join_mode: 'approval',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'Munchen-Drink-Click',\r\n          who: 'Mitglieder',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/Munchen-Drink-Click/events/268057247/',\r\n        how_to_find_us: 'Irgendwo im Starbucks oder davor oder dahinter. (Es gibt einen zweiten Eingang zum Hofgarten hin). Du erkennst uns an den Kameras. :-) ',\r\n        description: 'Frei übersetzt. Das internationale Thema des Drick &amp; Click weltweit ist \"Rat\\'s Eye View\".',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      },\r\n      {\r\n        created: 1522694856000,\r\n        duration: 10800000,\r\n        id: 'lkgknpybcfbkc',\r\n        name: 'Deutsch-Japanischer\\u00ad Stammtisch',\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1585332000000,\r\n        local_date: '2020-03-27',\r\n        local_time: '19:00',\r\n        updated: 1522694856000,\r\n        utc_offset: 3600000,\r\n        waitlist_count: 0,\r\n        yes_rsvp_count: 2,\r\n        group: {\r\n          created: 1512221367000,\r\n          name: 'Deutsch-Japanischer Stammtisch',\r\n          id: 26763059,\r\n          join_mode: 'open',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'deutsch-japanischer-stammtisch',\r\n          who: 'Mitglieder',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/deutsch-japanischer-stammtisch/events/lkgknpybcfbkc/',\r\n        description: 'Herzlich willkommen beim deutsch-japanischen Sprach-Stammtisch! Wir sind eine nette Gruppe Deutscher und Japaner, die sich einmal im Monat zum Sprachaustausch trifft.',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      },\r\n      {\r\n        created: 1579299113000,\r\n        duration: 10800000,\r\n        fee: {\r\n          accepts: 'cash',\r\n          amount: 10,\r\n          currency: 'EUR',\r\n          label: 'Price',\r\n          required: false\r\n        },\r\n        id: '268001205',\r\n        name: 'Street Photo Outing II',\r\n        rsvp_limit: 20,\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1580563800000,\r\n        local_date: '2020-02-01',\r\n        local_time: '14:30',\r\n        updated: 1579611681000,\r\n        utc_offset: 3600000,\r\n        waitlist_count: 0,\r\n        yes_rsvp_count: 17,\r\n        group: {\r\n          created: 1500930561000,\r\n          name: 'Photography Workshops Munich',\r\n          id: 25119735,\r\n          join_mode: 'open',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'Munchen-Photography-Workshops',\r\n          who: 'Members',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/Munchen-Photography-Workshops/events/268001205/',\r\n        description: 'Street photography is one of the most challenging, but at the same time one of the most rewarding genres of photography.',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      },\r\n      {\r\n        created: 1579696976000,\r\n        duration: 4500000,\r\n        fee: {\r\n          accepts: 'paypal',\r\n          amount: 60,\r\n          currency: 'EUR',\r\n          label: 'Price',\r\n          required: true\r\n        },\r\n        id: '268110411',\r\n        name: 'Yoga-Kurs für Einsteiger! 4x75 Min. Basic Vinyasa Flow',\r\n        rsvp_limit: 15,\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1586271600000,\r\n        local_date: '2020-04-07',\r\n        local_time: '17:00',\r\n        updated: 1579696976000,\r\n        utc_offset: 7200000,\r\n        waitlist_count: 0,\r\n        yes_rsvp_count: 1,\r\n        group: {\r\n          created: 1514739324000,\r\n          name: 'Alpen Yoga München. Yoga, Wandern & Entspannen!',\r\n          id: 27011417,\r\n          join_mode: 'open',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'Alpen-Yoga-Muenchen-Wandern-Yoga-und-Entspannen',\r\n          who: 'Mitglieder',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/Alpen-Yoga-Muenchen-Wandern-Yoga-und-Entspannen/events/268110411/',\r\n        how_to_find_us: 'Wir sind im oberen Raum',\r\n        description: 'Hallo ihr Lieben,<br/>Lust auf Yoga? Komm für 4x75 Min. in den Basic-Kurs für Einsteiger!',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      },\r\n      {\r\n        created: 1580186069000,\r\n        duration: 3600000,\r\n        id: '268259084',\r\n        name: 'The Purpose of Life in Buddhism',\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1580626800000,\r\n        local_date: '2020-02-02',\r\n        local_time: '08:00',\r\n        updated: 1580186069000,\r\n        utc_offset: 3600000,\r\n        waitlist_count: 0,\r\n        yes_rsvp_count: 3,\r\n        group: {\r\n          created: 1449538782000,\r\n          name: 'München Meanings of Life in Buddhism Meetup',\r\n          id: 19192295,\r\n          join_mode: 'open',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'Munchen-Meanings-of-Life-in-Buddhism-Meetup',\r\n          who: 'Members',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/Munchen-Meanings-of-Life-in-Buddhism-Meetup/events/268259084/',\r\n        description: 'Why were we born? Why are we living? What is the purpose of our life?',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      }\r\n    ]\r\n};\r\n\r\nexport { mockEvents };","import { mockEvents } from \"./mock-events\";\r\nimport axios from 'axios';\r\n\r\nasync function getOrRenewAccessToken(type, key) {\r\n    let url;\r\n    if (type === 'get') {\r\n      // Lambda endpoint to get token by code\r\n      url = 'https://dwmkm8fd85.execute-api.us-east-2.amazonaws.com/dev/api/token/'\r\n        + key;\r\n    } else if (type === 'renew') {\r\n      // Lambda endpoint to get token by refresh_token\r\n      url = 'https://dwmkm8fd85.execute-api.us-east-2.amazonaws.com/dev/api/refresh/'\r\n        + key;\r\n    }\r\n  \r\n    // Use Axios to make a GET request to the endpoint\r\n    const tokenInfo = await axios.get(url);\r\n  \r\n    // Save tokens to localStorage together with a timestamp\r\n    localStorage.setItem('access_token', tokenInfo.data.access_token);\r\n    localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\r\n    localStorage.setItem('last_saved_time', Date.now());\r\n  \r\n    // Return the access_token\r\n    return tokenInfo.data.access_token;\r\n}\r\n\r\nasync function getAccessToken() {\r\n    \r\n    const accessToken = localStorage.getItem('access_token');\r\n\r\n    //If no access_token found\r\n    if (!accessToken) {\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = searchParams.get('code');\r\n    \r\n        if (!code) {\r\n          window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=p1pgoik89rttk45728fo862m0o&response_type=code&redirect_uri=https://ktvprasaad.github.io/meetup/';\r\n          return null;\r\n        }\r\n        return getOrRenewAccessToken('get', code);\r\n    }\r\n\r\n    const lastSavedTime = localStorage.getItem('last_saved_time');\r\n\r\n    // Check if access_token is still valid\r\n    // Date.now() returns timestamp in milliseconds, one hour = 3600000 milliseconds\r\n    if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\r\n        // The token is valid, return the token and end the function\r\n        return accessToken;\r\n    }\r\n    // If the access_token is expired, we try to renew it by using refresh_token\r\n    const refreshToken = localStorage.getItem('refresh_token');\r\n    return getOrRenewAccessToken('renew', refreshToken);\r\n}\r\n\r\n\r\nasync function getSuggestions(query) {\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        return [\r\n        {\r\n            city: 'Munich',\r\n            country: 'de',\r\n            localized_country_name: 'Germany',\r\n            name_string: 'Munich, Germany',\r\n            zip: 'meetup3',\r\n            lat: 48.14,\r\n            lon: 11.58\r\n        },\r\n        {\r\n            city: 'Munich',\r\n            country: 'us',\r\n            localized_country_name: 'USA',\r\n            state: 'ND',\r\n            name_string: 'Munich, North Dakota, USA',\r\n            zip: '58352',\r\n            lat: 48.66,\r\n            lon: -98.85\r\n        }\r\n        ];\r\n    }\r\n\r\n    const token = await getAccessToken();\r\n    if (token) {\r\n      const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\r\n        + query\r\n        + '&access_token=' + token;\r\n      const result = await axios.get(url);\r\n      return result.data;\r\n    }\r\n    return [];\r\n}\r\n\r\nasync function getEvents(lat, lon, page) {\r\n\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        return mockEvents.events;\r\n    }\r\n\r\n    const token = await getAccessToken();\r\n\r\n    if (token) {\r\n        let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\r\n          + '&access_token=' + token;\r\n        // lat, lon is optional; if you have a lat and lon, you can add them\r\n        if (lat && lon) {\r\n          url += '&lat=' + lat + '&lon=' + lon;\r\n        }\r\n        if (page) {\r\n            url += '&page=' + page;\r\n        }\r\n        const result = await axios.get(url);\r\n        return result.data.events;\r\n      }\r\n      return [];\r\n}\r\n\r\nexport { getSuggestions, getEvents };\r\n","import React, { Component } from 'react';\r\nimport { getSuggestions } from './api';\r\n\r\nclass CitySearch extends Component {\r\n\r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({ query: value });\r\n        getSuggestions(value).then(suggestions => \r\n            this.setState({\r\n                suggestions\r\n        }));\r\n    }\r\n\r\n    handleItemClicked = (value, lat, lon) => {\r\n        this.setState({ query: value, suggestions: [] });\r\n        this.props.updateEvents(lat, lon);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                    placeholder=\"City\"\r\n                />\r\n                <ul className=\"suggestions\">\r\n                    {this.state.suggestions.map(item => \r\n                        <li key={item.name_string} \r\n                        onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}>\r\n                            {item.name_string}\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n    state = {\r\n        displayCount: 32\r\n    } \r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({ displayCount: value });\r\n\r\n        if (value < 1) {\r\n            alert('Event Count cannot be less than 1');\r\n        } else {\r\n            console.log(value);\r\n            this.props.updateEvents(null, null, value);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NumberOfEvents\">\r\n                <span>Show</span>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"number\"\r\n                    value={this.state.displayCount}\r\n                    onChange={this.handleInputChanged}/>\r\n                <span>Events</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default NumberOfEvents;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\n// import Event from './Event';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { getEvents } from './api';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    events: [],\r\n    lat: null,\r\n    lon: null,\r\n    page: null,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateEvents();\r\n  }\r\n  \r\n  updateEvents = (lat, lon, page) => {\r\n    // getEvents(lat, lon).then(events => this.setState({ events }));\r\n    if (lat && lon) {\r\n      getEvents(lat, lon, this.state.page).then(events =>\r\n        this.setState({ events, lat, lon })\r\n      );\r\n    } else if (page) {\r\n      getEvents(this.state.lat, this.state.lon, page).then(events =>\r\n        this.setState({ events, page })\r\n      );\r\n    } else {\r\n      getEvents(this.state.lat, this.state.lon, this.state.page).then(events =>\r\n        this.setState({ events })\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <CitySearch updateEvents={this.updateEvents}/>\r\n        <NumberOfEvents updateEvents={this.updateEvents}/>\r\n        <EventList events={this.state.events}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}