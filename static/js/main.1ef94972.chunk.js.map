{"version":3,"sources":["Event.js","Alert.js","EventList.js","mock-events.js","api.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showHideFlag","detailsClicked","setState","getCount","rsvpCounts","push","name","value","props","event","yes_rsvp_count","rsvp_limit","this","colors","className","local_date","local_time","height","width","align","data","cx","cy","innerRadius","outerRadius","label","map","entry","index","key","fill","group","localized_location","href","link","target","onClick","Component","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","fontStyle","WarningAlert","EventList","warnText","events","id","length","mockEvents","created","duration","date_in_series_pattern","status","time","updated","utc_offset","waitlist_count","join_mode","lat","lon","urlname","who","country","region","timezone","description","visibility","member_pay_fee","how_to_find_us","fee","accepts","amount","currency","required","getOrRenewAccessToken","type","a","async","url","axios","get","tokenInfo","localStorage","setItem","access_token","refresh_token","Date","now","getAccessToken","accessToken","getItem","searchParams","URLSearchParams","window","location","search","code","lastSavedTime","refreshToken","getSuggestions","query","startsWith","city","localized_country_name","name_string","zip","token","result","getEvents","page","navigator","onLine","JSON","parse","stringify","CitySearch","suggestions","handleInputChanged","then","infoText","handleItemClicked","updateEvents","onChange","placeholder","item","NumberOfEvents","displayCount","errorText","App","_isMounted","addWarning","removeWarning","countEventsOnADate","date","count","i","getData","next7Days","currentDate","moment","add","dateString","format","number","addEventListener","margin","top","right","bottom","left","dataKey","allowDecimals","cursor","strokeDasharray","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","atatus","install","Error"],"mappings":"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","file":"static/js/main.1ef94972.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    PieChart, Pie, Cell, Legend, Tooltip, ResponsiveContainer\r\n  } from 'recharts';\r\n\r\nclass Event extends Component {\r\n    state = {\r\n        showHideFlag: false,\r\n    } \r\n\r\n    detailsClicked = () => {\r\n        if (this.state.showHideFlag === false ) {\r\n            this.setState({ \r\n                showHideFlag: true,\r\n             });\r\n        } else {\r\n            this.setState({ \r\n                showHideFlag: false\r\n            });\r\n        }\r\n    }\r\n\r\n    getCount = () => {\r\n        const rsvpCounts = [];\r\n        rsvpCounts.push({name: 'Reservations', value: this.props.event.yes_rsvp_count }, \r\n                        {name: 'Free Slots', value: ( this.props.event.rsvp_limit - this.props.event.yes_rsvp_count)});\r\n        return rsvpCounts;\r\n    }\r\n\r\n    render() {\r\n        const event = this.props.event;\r\n        let colors = ['#ca9d82','#82ca9d'];\r\n        return (\r\n            <div className=\"Event\">\r\n                <div className=\"less\">\r\n                    <p className=\"name\">{event.name}</p>\r\n                    <p className=\"date\"><span>On </span>{event.local_date}\r\n                        <span> @ </span>{event.local_time}\r\n                    </p>\r\n                    { event.rsvp_limit && <ResponsiveContainer height={180}>\r\n                        <PieChart width={150} height={150}>\r\n                        <Legend align=\"left\"/>\r\n                            <Pie data={this.getCount()} \r\n                                cx={150} cy={75} innerRadius={40} outerRadius={50} label>\r\n                                \t{\r\n                                        this.getCount().map((entry, index) => (\r\n                                        <Cell key={`cell-${index}`} fill={colors[index]}/>\r\n                                        ))\r\n                                    }\r\n                            </Pie>\r\n                            <Tooltip />\r\n                        </PieChart>\r\n                    </ResponsiveContainer> }\r\n                </div>\r\n                {this.state.showHideFlag && \r\n                    <div className=\"more\">\r\n                        <p className=\"groupName\"><span>Name: </span>{event.group.name}</p>\r\n                        <p className=\"location\"><span>Where: </span>{event.group.localized_location}</p>\r\n                        <p className=\"location\">\r\n                            <a href={event.link} target=\"_blank\"><span>More about the event</span></a>\r\n                        </p>\r\n                    </div>\r\n                }\r\n                <button className=\"details\" onClick={() => this.detailsClicked()}>Details</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = null;\r\n    }\r\n\r\n    getStyle = () => {\r\n        return {\r\n            color: this.color,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Alert\">\r\n                <p style={this.getStyle()}>{this.props.text}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'blue';\r\n    }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'red';\r\n    }\r\n    getStyle = () => {\r\n        return {\r\n          color: this.color,\r\n          fontStyle: 'italic',\r\n        };\r\n    }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'orange';\r\n    }\r\n}\r\n\r\nexport { InfoAlert, WarningAlert, ErrorAlert };\r\n\r\n","import React, { Component } from 'react';\r\nimport Event from './Event';\r\nimport { WarningAlert } from './Alert';\r\n\r\n\r\nclass EventList extends Component {\r\n    \r\n    state = {\r\n        warnText: \"No Events to display for this city, please select some other city.\",\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cityEvents\">\r\n                <ul className=\"EventList\">\r\n                    {this.props.events.map(event => \r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                    )}\r\n                </ul>\r\n                { this.props.events.length === 0 && <WarningAlert text={this.state.warnText}/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","const mockEvents = {\r\n    city: {\r\n      id: 1007700,\r\n      city: 'München',\r\n      lat: 48.14,\r\n      lon: 11.58,\r\n      state: '',\r\n      country: 'de',\r\n      zip: 'meetup3',\r\n      member_count: 1257\r\n    },\r\n    events: [\r\n      {\r\n        created: 1580186017000,\r\n        duration: 3600000,\r\n        id: '268259064',\r\n        name: 'The Purpose of Life in Buddhism',\r\n        rsvp_limit: 12,\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1580540400000,\r\n        local_date: '2020-02-26',\r\n        local_time: '08:00',\r\n        updated: 1580186017000,\r\n        utc_offset: 3600000,\r\n        waitlist_count: 0,\r\n        yes_rsvp_count: 3,\r\n        group: {\r\n          created: 1449538782000,\r\n          name: 'München Meanings of Life in Buddhism Meetup',\r\n          id: 19192295,\r\n          join_mode: 'open',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'Munchen-Meanings-of-Life-in-Buddhism-Meetup',\r\n          who: 'Members',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/Munchen-Meanings-of-Life-in-Buddhism-Meetup/events/268259064/',\r\n        description: 'Why were we born? Why are we living? What is the purpose of our life?',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      },\r\n      {\r\n        created: 1579522911000,\r\n        duration: 10800000,\r\n        id: '268057247',\r\n        name: 'Drink&Click™ München, Februar, Froschperspektive',\r\n        rsvp_limit: 50,\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1581253200000,\r\n        local_date: '2020-02-27',\r\n        local_time: '14:00',\r\n        updated: 1579522911000,\r\n        utc_offset: 3600000,\r\n        waitlist_count: 0,\r\n        yes_rsvp_count: 3,\r\n        group: {\r\n          created: 1540109682000,\r\n          name: 'München Drink&Click™',\r\n          id: 30362257,\r\n          join_mode: 'approval',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'Munchen-Drink-Click',\r\n          who: 'Mitglieder',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/Munchen-Drink-Click/events/268057247/',\r\n        how_to_find_us: 'Irgendwo im Starbucks oder davor oder dahinter. (Es gibt einen zweiten Eingang zum Hofgarten hin). Du erkennst uns an den Kameras. :-) ',\r\n        description: 'Frei übersetzt. Das internationale Thema des Drick &amp; Click weltweit ist \"Rat\\'s Eye View\".',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      },\r\n      {\r\n        created: 1522694856000,\r\n        duration: 10800000,\r\n        id: 'lkgknpybcfbkc',\r\n        name: 'Deutsch-Japanischer\\u00ad Stammtisch',\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1585332000000,\r\n        local_date: '2020-02-27',\r\n        local_time: '19:00',\r\n        updated: 1522694856000,\r\n        utc_offset: 3600000,\r\n        waitlist_count: 0,\r\n        yes_rsvp_count: 2,\r\n        group: {\r\n          created: 1512221367000,\r\n          name: 'Deutsch-Japanischer Stammtisch',\r\n          id: 26763059,\r\n          join_mode: 'open',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'deutsch-japanischer-stammtisch',\r\n          who: 'Mitglieder',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/deutsch-japanischer-stammtisch/events/lkgknpybcfbkc/',\r\n        description: 'Herzlich willkommen beim deutsch-japanischen Sprach-Stammtisch! Wir sind eine nette Gruppe Deutscher und Japaner, die sich einmal im Monat zum Sprachaustausch trifft.',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      },\r\n      {\r\n        created: 1579299113000,\r\n        duration: 10800000,\r\n        fee: {\r\n          accepts: 'cash',\r\n          amount: 10,\r\n          currency: 'EUR',\r\n          label: 'Price',\r\n          required: false\r\n        },\r\n        id: '268001205',\r\n        name: 'Street Photo Outing II',\r\n        rsvp_limit: 20,\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1580563800000,\r\n        local_date: '2020-02-28',\r\n        local_time: '14:30',\r\n        updated: 1579611681000,\r\n        utc_offset: 3600000,\r\n        waitlist_count: 0,\r\n        yes_rsvp_count: 17,\r\n        group: {\r\n          created: 1500930561000,\r\n          name: 'Photography Workshops Munich',\r\n          id: 25119735,\r\n          join_mode: 'open',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'Munchen-Photography-Workshops',\r\n          who: 'Members',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/Munchen-Photography-Workshops/events/268001205/',\r\n        description: 'Street photography is one of the most challenging, but at the same time one of the most rewarding genres of photography.',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      },\r\n      {\r\n        created: 1579696976000,\r\n        duration: 4500000,\r\n        fee: {\r\n          accepts: 'paypal',\r\n          amount: 60,\r\n          currency: 'EUR',\r\n          label: 'Price',\r\n          required: true\r\n        },\r\n        id: '268110411',\r\n        name: 'Yoga-Kurs für Einsteiger! 4x75 Min. Basic Vinyasa Flow',\r\n        rsvp_limit: 15,\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1586271600000,\r\n        local_date: '2020-02-29',\r\n        local_time: '17:00',\r\n        updated: 1579696976000,\r\n        utc_offset: 7200000,\r\n        waitlist_count: 0,\r\n        yes_rsvp_count: 1,\r\n        group: {\r\n          created: 1514739324000,\r\n          name: 'Alpen Yoga München. Yoga, Wandern & Entspannen!',\r\n          id: 27011417,\r\n          join_mode: 'open',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'Alpen-Yoga-Muenchen-Wandern-Yoga-und-Entspannen',\r\n          who: 'Mitglieder',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/Alpen-Yoga-Muenchen-Wandern-Yoga-und-Entspannen/events/268110411/',\r\n        how_to_find_us: 'Wir sind im oberen Raum',\r\n        description: 'Hallo ihr Lieben,<br/>Lust auf Yoga? Komm für 4x75 Min. in den Basic-Kurs für Einsteiger!',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      },\r\n      {\r\n        created: 1580186069000,\r\n        duration: 3600000,\r\n        id: '268259084',\r\n        name: 'The Purpose of Life in Buddhism',\r\n        rsvp_limit: 100,\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1580626800000,\r\n        local_date: '2020-03-01',\r\n        local_time: '08:00',\r\n        updated: 1580186069000,\r\n        utc_offset: 3600000,\r\n        waitlist_count: 10,\r\n        yes_rsvp_count: 100,\r\n        group: {\r\n          created: 1449538782000,\r\n          name: 'München Meanings of Life in Buddhism Meetup',\r\n          id: 19192295,\r\n          join_mode: 'open',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'Munchen-Meanings-of-Life-in-Buddhism-Meetup',\r\n          who: 'Members',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/Munchen-Meanings-of-Life-in-Buddhism-Meetup/events/268259084/',\r\n        description: 'Why were we born? Why are we living? What is the purpose of our life?',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      }\r\n    ]\r\n};\r\n\r\nconst data = [\r\n  {\r\n    date: '2020-02-25', // Tomorrow\r\n    number: 10,\r\n  },\r\n  {\r\n    date: '2020-02-26',\r\n    number: 8,\r\n  },\r\n  {\r\n    date: '2020-02-27',\r\n    number: 3,\r\n  },\r\n  {\r\n    date: '2020-02-28',\r\n    number: 7,\r\n  },\r\n  {\r\n    date: '2020-02-29',\r\n    number: 1,\r\n  },\r\n  {\r\n    date: '2020-03-01',\r\n    number: 9,\r\n  },\r\n  {\r\n    date: '2020-03-02',\r\n    number: 2,\r\n  },\r\n];\r\n\r\nexport { mockEvents, data };","import { mockEvents } from \"./mock-events\";\r\nimport axios from 'axios';\r\n\r\nasync function getOrRenewAccessToken(type, key) {\r\n    let url;\r\n    if (type === 'get') {\r\n      // Lambda endpoint to get token by code\r\n      url = 'https://dwmkm8fd85.execute-api.us-east-2.amazonaws.com/dev/api/token/'\r\n        + key;\r\n    } else if (type === 'renew') {\r\n      // Lambda endpoint to get token by refresh_token\r\n      url = 'https://dwmkm8fd85.execute-api.us-east-2.amazonaws.com/api/refresh/'\r\n        + key;\r\n    }\r\n  \r\n    // Use Axios to make a GET request to the endpoint\r\n    const tokenInfo = await axios.get(url);\r\n  \r\n    // Save tokens to localStorage together with a timestamp\r\n    localStorage.setItem('access_token', tokenInfo.data.access_token);\r\n    localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\r\n    localStorage.setItem('last_saved_time', Date.now());\r\n  \r\n    // Return the access_token\r\n    return tokenInfo.data.access_token;\r\n}\r\n\r\nasync function getAccessToken() {\r\n    \r\n    const accessToken = localStorage.getItem('access_token');\r\n\r\n    //If no access_token found\r\n    if (!accessToken) {\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = searchParams.get('code');\r\n    \r\n        if (!code) {\r\n          window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=p1pgoik89rttk45728fo862m0o&response_type=code&redirect_uri=https://ktvprasaad.github.io/meetup/';\r\n          return null;\r\n        }\r\n        return getOrRenewAccessToken('get', code);\r\n    }\r\n\r\n    const lastSavedTime = localStorage.getItem('last_saved_time');\r\n\r\n    // Check if access_token is still valid\r\n    // Date.now() returns timestamp in milliseconds, one hour = 3600000 milliseconds\r\n    if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\r\n        // The token is valid, return the token and end the function\r\n        return accessToken;\r\n    }\r\n    // If the access_token is expired, we try to renew it by using refresh_token\r\n    const refreshToken = localStorage.getItem('refresh_token');\r\n    return getOrRenewAccessToken('renew', refreshToken);\r\n}\r\n\r\n\r\nasync function getSuggestions(query) {\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        return [\r\n        {\r\n            city: 'Munich',\r\n            country: 'de',\r\n            localized_country_name: 'Germany',\r\n            name_string: 'Munich, Germany',\r\n            zip: 'meetup3',\r\n            lat: 48.14,\r\n            lon: 11.58\r\n        },\r\n        {\r\n            city: 'Munich',\r\n            country: 'us',\r\n            localized_country_name: 'USA',\r\n            state: 'ND',\r\n            name_string: 'Munich, North Dakota, USA',\r\n            zip: '58352',\r\n            lat: 48.66,\r\n            lon: -98.85\r\n        }\r\n        ];\r\n    }\r\n\r\n    const token = await getAccessToken();\r\n    if (token) {\r\n      const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\r\n        + query\r\n        + '&access_token=' + token;\r\n      const result = await axios.get(url);\r\n      return result.data;\r\n    }\r\n    return [];\r\n}\r\n\r\nasync function getEvents(lat, lon, page) {\r\n\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        return mockEvents.events;\r\n    }\r\n\r\n    if (!navigator.onLine) {\r\n      const events = localStorage.getItem('lastEvents');\r\n      return JSON.parse(events);\r\n    }\r\n    \r\n    const token = await getAccessToken();\r\n\r\n    if (token) {\r\n        let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\r\n          + '&access_token=' + token;\r\n        // lat, lon is optional; if you have a lat and lon, you can add them\r\n        if (lat && lon) {\r\n          url += '&lat=' + lat + '&lon=' + lon;\r\n        }\r\n        if (page) {\r\n            url += '&page=' + page;\r\n        }\r\n        const result = await axios.get(url);\r\n        // return result.data.events;\r\n        const events = result.data.events;\r\n        if (events.length) { // Check if the events exist\r\n          localStorage.setItem('lastEvents', JSON.stringify(events));\r\n        }\r\n        return events;\r\n      }\r\n      return [];\r\n}\r\n\r\nexport { getSuggestions, getEvents };\r\n","import React, { Component } from 'react';\r\nimport { getSuggestions } from './api';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n\r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({ query: value });\r\n        getSuggestions(value).then(suggestions => {\r\n            this.setState({ suggestions });\r\n            \r\n            if (value && suggestions.length === 0 ) {\r\n                this.setState({\r\n                    infoText: \"We cannot find the city you are looking for. Please try another city\",\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    infoText: '',\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleItemClicked = (value, lat, lon) => {\r\n        this.setState({ query: value, suggestions: [] });\r\n        this.props.updateEvents(lat, lon);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <InfoAlert text={this.state.infoText} />\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                    placeholder=\"City\"\r\n                />\r\n                <ul className=\"suggestions\">\r\n                    {this.state.suggestions.map(item => \r\n                        <li key={item.name_string} \r\n                        onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}>\r\n                            {item.name_string}\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n    state = {\r\n        displayCount: 32,\r\n    } \r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({ displayCount: value });\r\n\r\n        if (value < 1 ) {\r\n            this.setState({\r\n                errorText: \"Number shoud be at least 1\",\r\n            });\r\n        } else {\r\n            this.setState({\r\n                errorText: '',\r\n            });\r\n            this.props.updateEvents(null, null, value);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NumberOfEvents\">\r\n                <span>Show</span>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"number\"\r\n                    value={this.state.displayCount}\r\n                    onChange={this.handleInputChanged}/>\r\n                <span>Events</span>\r\n                <ErrorAlert text={this.state.errorText} /> \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default NumberOfEvents;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport {\r\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend\r\n} from 'recharts';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { getEvents } from './api';\r\nimport { WarningAlert } from './Alert';\r\n\r\n\r\nclass App extends Component {\r\n  _isMounted = false;\r\n\r\n  state = {\r\n    events: [],\r\n    lat: null,\r\n    lon: null,\r\n    page: null,\r\n    warnText: \"No Internet!! Events are shown from cache & may not be up to date!\",\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.updateEvents();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n  \r\n  updateEvents = (lat, lon, page) => {\r\n    // getEvents(lat, lon).then(events => this.setState({ events }));\r\n    if (lat && lon) {\r\n      getEvents(lat, lon, this.state.page)\r\n      .then(events => {\r\n          if ( this._isMounted ) {\r\n            this.setState({ events, lat, lon });\r\n          }\r\n        });\r\n    } else if (page) {\r\n      getEvents(this.state.lat, this.state.lon, page)\r\n      .then(events => {\r\n        if ( this._isMounted ) {\r\n          this.setState({ events, page })\r\n        }\r\n      });\r\n    } else {\r\n      getEvents(this.state.lat, this.state.lon, this.state.page)\r\n      .then(events => {\r\n        if ( this._isMounted ) {\r\n          this.setState({ events })\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  addWarning = () => {\r\n      this.setState({ warnText: \"No Internet!! Events are shown from cache & may not be up to date!\" });\r\n  }\r\n\r\n  removeWarning = () => {\r\n    this.setState({ warnText: '' });\r\n  }\r\n\r\n  countEventsOnADate = (date) => {\r\n    let count = 0;\r\n    for (let i = 0; i < this.state.events.length; i += 1) {\r\n      if (this.state.events[i].local_date === date) {\r\n        count += 1;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n  \r\n  getData = () => {\r\n    const next7Days = []; // Create empty array for the next 7 days\r\n    const currentDate = moment(); // Today\r\n    // Loop 7 times for next 7 days\r\n    for (let i = 0; i < 7; i += 1) {\r\n      currentDate.add(1, 'days'); // Add 1 day to current date, currentDate changes\r\n      const dateString = currentDate.format('YYYY-MM-DD'); // Format the date\r\n      // Use the countEventsOnADate function to count #events on this date\r\n      const count = this.countEventsOnADate(dateString);\r\n      next7Days.push({ date: dateString, number: count }); // Add this date and number to the list\r\n    }\r\n    return next7Days;\r\n  }\r\n\r\n  render() {\r\n    window.addEventListener('offline', this.addWarning);\r\n    window.addEventListener('online', this.removeWarning);\r\n    return (\r\n      <div className=\"App\">\r\n        <CitySearch updateEvents={this.updateEvents}/>\r\n        <NumberOfEvents updateEvents={this.updateEvents}/>\r\n        <ResponsiveContainer className=\"grid\" height={400}>\r\n          <ScatterChart\r\n            margin={{ \r\n              top: 20, right: 20, bottom: 20, left: 20,\r\n            }}\r\n          >\r\n            <CartesianGrid />\r\n            <XAxis type=\"category\" dataKey=\"date\" name=\"date\" />\r\n            <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" allowDecimals={false}/>\r\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n            <Legend />\r\n            <Scatter data={this.getData()} dataKey=\"# of Events on Date\" fill=\"#8884d8\" />\r\n          </ScatterChart>\r\n        </ResponsiveContainer>  \r\n        {!navigator.onLine && <WarningAlert text={this.state.warnText}/>}\r\n        <EventList events={this.state.events}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport * as atatus from 'atatus-spa';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\nserviceWorker.register();\r\natatus.config('d320769e06c14cba8fe7b79b7feb41bf').install();\r\n\r\natatus.notify(new Error('Test Atatus Setup'));"],"sourceRoot":""}