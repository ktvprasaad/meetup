{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showHideFlag","events","id","name","yes_rsvp_count","detailsClicked","setState","group","urlname","who","localized_location","link","description","visibility","className","this","map","event","key","onClick","Component","EventList","props","mockEvents","created","duration","date_in_series_pattern","status","time","local_date","local_time","updated","utc_offset","waitlist_count","join_mode","lat","lon","country","region","timezone","member_pay_fee","how_to_find_us","fee","accepts","amount","currency","label","required","rsvp_limit","getSuggestions","query","a","async","city","localized_country_name","name_string","zip","getEvents","CitySearch","suggestions","handleInputChanged","target","value","then","handleItemClicked","updateEvents","type","onChange","item","NumberOfEvents","displayCount","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b266418.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Event extends Component {\r\n    state = {\r\n        showHideFlag: false,\r\n        events: [\r\n            {\r\n                id: '267887413',\r\n                name: 'Lower Manhattan and Brooklyn Night Photography Workshop',\r\n                yes_rsvp_count: 1\r\n            }\r\n        ]\r\n    } \r\n\r\n    detailsClicked = () => {\r\n        if (this.state.showHideFlag === false ) {\r\n            this.setState({ \r\n                showHideFlag: true,\r\n                events: [\r\n                    {\r\n                        id: '267887413',\r\n                        name: 'Lower Manhattan and Brooklyn Night Photography Workshop',\r\n                        yes_rsvp_count: 1,\r\n                        group: {\r\n                            name: 'Philadelphia Travel Photography',\r\n                            urlname: 'Philadelphia-Travel-Photography',\r\n                            who: 'Photographers',\r\n                            localized_location: 'Philadelphia, PA',\r\n                        },\r\n                        link: 'https://www.meetup.com/Philadelphia-Travel-Photography/events/267887413/',\r\n                        description: '<p>Join for a fun afternoon and evening photography workshop.</p>',\r\n                        visibility: 'public',\r\n                    }\r\n                ]\r\n             });\r\n        } else {\r\n            this.setState({ \r\n                showHideFlag: false,\r\n                events: [\r\n                    {\r\n                        id: '267887413',\r\n                        name: 'Lower Manhattan and Brooklyn Night Photography Workshop',\r\n                        yes_rsvp_count: 1\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Event\">\r\n                <ul className=\"events\">\r\n                    {this.state.events.map(event => \r\n                        <li key={event.id}>{event.name}</li>\r\n                    )}\r\n                    <button className=\"details\" onClick={() => this.detailsClicked()}>Details</button>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {this.props.events.map(event => \r\n                <li key={event.id}>\r\n                    <Event event={event} />\r\n                </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","const mockEvents = {\r\n    city: {\r\n      id: 1007700,\r\n      city: 'München',\r\n      lat: 48.14,\r\n      lon: 11.58,\r\n      state: '',\r\n      country: 'de',\r\n      zip: 'meetup3',\r\n      member_count: 1257\r\n    },\r\n    events: [\r\n      {\r\n        created: 1580186017000,\r\n        duration: 3600000,\r\n        id: '268259064',\r\n        name: 'The Purpose of Life in Buddhism',\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1580540400000,\r\n        local_date: '2020-02-01',\r\n        local_time: '08:00',\r\n        updated: 1580186017000,\r\n        utc_offset: 3600000,\r\n        waitlist_count: 0,\r\n        yes_rsvp_count: 3,\r\n        group: {\r\n          created: 1449538782000,\r\n          name: 'München Meanings of Life in Buddhism Meetup',\r\n          id: 19192295,\r\n          join_mode: 'open',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'Munchen-Meanings-of-Life-in-Buddhism-Meetup',\r\n          who: 'Members',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/Munchen-Meanings-of-Life-in-Buddhism-Meetup/events/268259064/',\r\n        description: '<p>Why were we born? Why are we living? What is the purpose of our life?</p>',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      },\r\n      {\r\n        created: 1579522911000,\r\n        duration: 10800000,\r\n        id: '268057247',\r\n        name: 'Drink&Click™ München, Februar, Froschperspektive',\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1581253200000,\r\n        local_date: '2020-02-09',\r\n        local_time: '14:00',\r\n        updated: 1579522911000,\r\n        utc_offset: 3600000,\r\n        waitlist_count: 0,\r\n        yes_rsvp_count: 3,\r\n        group: {\r\n          created: 1540109682000,\r\n          name: 'München Drink&Click™',\r\n          id: 30362257,\r\n          join_mode: 'approval',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'Munchen-Drink-Click',\r\n          who: 'Mitglieder',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/Munchen-Drink-Click/events/268057247/',\r\n        how_to_find_us: 'Irgendwo im Starbucks oder davor oder dahinter. (Es gibt einen zweiten Eingang zum Hofgarten hin). Du erkennst uns an den Kameras. :-) ',\r\n        description: '<p>Frei übersetzt. Das internationale Thema des Drick &amp; Click weltweit ist \"Rat\\'s Eye View\".</p>',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      },\r\n      {\r\n        created: 1522694856000,\r\n        duration: 10800000,\r\n        id: 'lkgknpybcfbkc',\r\n        name: 'Deutsch-Japanischer\\u00ad Stammtisch',\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1585332000000,\r\n        local_date: '2020-03-27',\r\n        local_time: '19:00',\r\n        updated: 1522694856000,\r\n        utc_offset: 3600000,\r\n        waitlist_count: 0,\r\n        yes_rsvp_count: 2,\r\n        group: {\r\n          created: 1512221367000,\r\n          name: 'Deutsch-Japanischer Stammtisch',\r\n          id: 26763059,\r\n          join_mode: 'open',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'deutsch-japanischer-stammtisch',\r\n          who: 'Mitglieder',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/deutsch-japanischer-stammtisch/events/lkgknpybcfbkc/',\r\n        description: '<p>Why were we born? Why are we living? What is the purpose of our life?</p>',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      },\r\n      {\r\n        created: 1579299113000,\r\n        duration: 10800000,\r\n        fee: {\r\n          accepts: 'cash',\r\n          amount: 10,\r\n          currency: 'EUR',\r\n          label: 'Price',\r\n          required: false\r\n        },\r\n        id: '268001205',\r\n        name: 'Street Photo Outing II',\r\n        rsvp_limit: 20,\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1580563800000,\r\n        local_date: '2020-02-01',\r\n        local_time: '14:30',\r\n        updated: 1579611681000,\r\n        utc_offset: 3600000,\r\n        waitlist_count: 0,\r\n        yes_rsvp_count: 17,\r\n        group: {\r\n          created: 1500930561000,\r\n          name: 'Photography Workshops Munich',\r\n          id: 25119735,\r\n          join_mode: 'open',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'Munchen-Photography-Workshops',\r\n          who: 'Members',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/Munchen-Photography-Workshops/events/268001205/',\r\n        description: '<p>Why were we born? Why are we living? What is the purpose of our life?</p>',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      },\r\n      {\r\n        created: 1579696976000,\r\n        duration: 4500000,\r\n        fee: {\r\n          accepts: 'paypal',\r\n          amount: 60,\r\n          currency: 'EUR',\r\n          label: 'Price',\r\n          required: true\r\n        },\r\n        id: '268110411',\r\n        name: 'Yoga-Kurs für Einsteiger! 4x75 Min. Basic Vinyasa Flow',\r\n        rsvp_limit: 15,\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1586271600000,\r\n        local_date: '2020-04-07',\r\n        local_time: '17:00',\r\n        updated: 1579696976000,\r\n        utc_offset: 7200000,\r\n        waitlist_count: 0,\r\n        yes_rsvp_count: 1,\r\n        group: {\r\n          created: 1514739324000,\r\n          name: 'Alpen Yoga München. Yoga, Wandern & Entspannen!',\r\n          id: 27011417,\r\n          join_mode: 'open',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'Alpen-Yoga-Muenchen-Wandern-Yoga-und-Entspannen',\r\n          who: 'Mitglieder',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/Alpen-Yoga-Muenchen-Wandern-Yoga-und-Entspannen/events/268110411/',\r\n        how_to_find_us: 'Wir sind im oberen Raum',\r\n        description: '<p>Hallo ihr Lieben,<br/>Lust auf Yoga? Komm für 4x75 Min. in den Basic-Kurs für Einsteiger!</p>',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      },\r\n      {\r\n        created: 1580186069000,\r\n        duration: 3600000,\r\n        id: '268259084',\r\n        name: 'The Purpose of Life in Buddhism',\r\n        date_in_series_pattern: false,\r\n        status: 'upcoming',\r\n        time: 1580626800000,\r\n        local_date: '2020-02-02',\r\n        local_time: '08:00',\r\n        updated: 1580186069000,\r\n        utc_offset: 3600000,\r\n        waitlist_count: 0,\r\n        yes_rsvp_count: 3,\r\n        group: {\r\n          created: 1449538782000,\r\n          name: 'München Meanings of Life in Buddhism Meetup',\r\n          id: 19192295,\r\n          join_mode: 'open',\r\n          lat: 48.13999938964844,\r\n          lon: 11.579999923706055,\r\n          urlname: 'Munchen-Meanings-of-Life-in-Buddhism-Meetup',\r\n          who: 'Members',\r\n          localized_location: 'München, Germany',\r\n          state: '',\r\n          country: 'de',\r\n          region: 'en_US',\r\n          timezone: 'Europe/Berlin'\r\n        },\r\n        link: 'https://www.meetup.com/Munchen-Meanings-of-Life-in-Buddhism-Meetup/events/268259084/',\r\n        description: '<p>Why were we born? Why are we living? What is the purpose of our life?</p>',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n      }\r\n    ]\r\n};\r\n\r\nexport { mockEvents };","import { mockEvents } from \"./mock-events\";\r\n\r\nasync function getSuggestions(query) {\r\n    return [\r\n        {\r\n            city: 'Munich',\r\n            country: 'de',\r\n            localized_country_name: 'Germany',\r\n            name_string: 'Munich, Germany',\r\n            zip: 'meetup3',\r\n            lat: 48.14,\r\n            lon: 11.58\r\n        },\r\n        {\r\n            city: 'Munich',\r\n            country: 'us',\r\n            localized_country_name: 'USA',\r\n            state: 'ND',\r\n            name_string: 'Munich, North Dakota, USA',\r\n            zip: '58352',\r\n            lat: 48.66,\r\n            lon: -98.85\r\n        }\r\n    ];\r\n}\r\n\r\nasync function getEvents(lat, lon) {\r\n    return mockEvents.events;\r\n}\r\nexport { getSuggestions, getEvents };\r\n","import React, { Component } from 'react';\r\nimport { getSuggestions } from './api';\r\n\r\nclass CitySearch extends Component {\r\n\r\n    state = {\r\n        query: 'Munich',\r\n        suggestions: [\r\n            {\r\n                city: 'Munich',\r\n                country: 'de',\r\n                localized_country_name: 'Germany',\r\n                name_string: 'Munich, Germany',\r\n                zip: 'meetup3',\r\n                lat: 48.14,\r\n                lon: 11.58\r\n              },\r\n              {\r\n                city: 'Munich',\r\n                country: 'us',\r\n                localized_country_name: 'USA',\r\n                state: 'ND',\r\n                name_string: 'Munich, North Dakota, USA',\r\n                zip: '58352',\r\n                lat: 48.66,\r\n                lon: -98.85\r\n              }\r\n        ]\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        getSuggestions(value).then(suggestions => \r\n            this.setState({\r\n                suggestions\r\n        }));\r\n    }\r\n\r\n    handleItemClicked = (value, lat, lon) => {\r\n        this.setState({ query: value});\r\n        this.props.updateEvents(lat, lon);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                />\r\n                <ul className=\"suggestions\">\r\n                    {this.state.suggestions.map(item => \r\n                        <li key={item.name_string} \r\n                        onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}>\r\n                            {item.name_string}\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n    state = {\r\n        displayCount: 32\r\n    } \r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({ displayCount: value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NumberOfEvents\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"number\"\r\n                    value={this.state.displayCount}\r\n                    onChange={this.handleInputChanged}>\r\n                        {this.displayCount}\r\n                </input>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default NumberOfEvents;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport Event from './Event';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { getEvents } from './api';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    events: [],\r\n  }\r\n\r\n  updateEvents = (lat, lon) => {\r\n    getEvents(lat, lon).then(events => this.setState({ events }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <CitySearch updateEvents={this.updateEvents}/>\r\n        <EventList events={this.state.events}/>\r\n        <Event />\r\n        <NumberOfEvents />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}